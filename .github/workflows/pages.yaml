name: GitHub Pages

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

permissions: {}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ secrets.GH_PAT_DENDRON_PUBLIC_NOTES }}
          repository: harrisonfang/dendron-workspace
          ref: main

      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
      - name: Restore node_modules cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: node_modules
          key: ${{ runner.os }}-nodejs-${{ hashFiles('pnpm-lock.yaml') }}
      - name: Install dependencies
        run: pnpm install

      - name: Configure Dendron to use GitHub PAT for remote vaults
        run: sed -i -e 's/git@github.com:/https:\/\/${{ secrets.GH_PAT_DENDRON_PUBLIC_NOTES }}@github.com\//g' dendron.yml
      - name: Initialize Dendron workspace
        run: pnpm dendron workspace init

      - name: Initialize dependencies for publishing
        run: pnpm dendron publish init
      - name: Restore .next cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: .next/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('.next/yarn.lock', '.next/package-lock.json', '.next/**.[jt]s', '.next/**.[jt]sx') }}

      - name: Build and export notes
        run: pnpm dendron publish export --target github --yes
      - uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa # v3.0.1
        with:
          path: docs

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4.0.5
